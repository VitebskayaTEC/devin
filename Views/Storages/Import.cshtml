@model List<Storage>

@{
    ViewBag.Title = "DEVIN | Склад | 1С";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles {
    <style>
        .items tr:hover td {background: #eee}
        .compare_bad {color: #ff0000!important}
        .compare_not_found {color: #208608!important}
        .compare_only_storage {color: #009688!important}
    </style>
}

@section menu {
    <li>
        <a class="menu-button" onclick="Storages.Import.addAll()">Добавить все новые позиции</a>
    </li>
}

<div class="unit unit-nohover">
    <table class="caption">
        <tr>
            <th>Сравнение остатков, указанных в выгрузке 1С, с числящимися на складе записями</th>
        </tr>
    </table>
    <table class="items">
        <thead>
            <tr>
                <th>Инв. №</th>
                <th>Наименование</th>
                <th>Дата прихода</th>
                <th>Счет учета</th>
                <th>На складе сейчас</th>
                <th>В ремонте</th>
                <th>Остаток по 1С</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @{
                var storages = new List<Storage>();
                var Storages = new List<Storage>();
                using (var conn = Database.Connection())
                {
                    Storages = conn.Query<Storage>("SELECT * FROM Storages ORDER BY Inventory").AsList();
                }
            }
            @foreach (var storage in Storages)
            {
                string className = "";
                bool hasExcel = false;

                foreach (var excel in Model)
                {
                    if (storage.Inventory == excel.Inventory)
                    {
                        className = storage.Nstorage + storage.Nrepairs == excel.Nall ? "compare_good" : "compare_bad";

                        <tr class="@className">
                            <td>@storage.Inventory</td>
                            <td>@storage.Name</td>
                            <td>@storage.Date.ToString("d MMMM yyyy")</td>
                            <td>@storage.Account</td>
                            <td>@storage.Nstorage</td>
                            <td>@storage.Nrepairs</td>
                            <td>@excel.Nall</td>
                            <td>
                                <button onclick="Storages.Import.open('@storage.Id')">Карточка</button>
                            </td>
                        </tr>

                        hasExcel = true;
                        break;
                    }
                }

                if (!hasExcel && (storage.Nstorage > 0 || storage.Nrepairs > 0) && (!storage.IsDeleted))
                {
                    storages.Add(storage);
                }
            }
            @foreach (var excel in Model)
            {
                bool isFound = false;

                foreach (var storage in Storages)
                {
                    if (storage.Inventory == excel.Inventory)
                    {
                        isFound = true;
                        break;
                    }
                }

                if (!isFound)
                {
                    <tr class="compare_not_found">
                        <td>@excel.Inventory</td>
                        <td>@excel.Name</td>
                        <td>@excel.Date.ToString("d MMMM yyyy")</td>
                        <td>@excel.Account</td>
                        <td insert="Nis">не найдено на складе</td>
                        <td insert="Nuse">не найдено на складе</td>
                        <td>@excel.Nall</td>
                        <td>
                            <button onclick="Storages.Import.add(this, { 
                                    Inventory: '@excel.Inventory',
                                    Name: '@excel.Name',
                                    Account: '@excel.Account',
                                    Nall: @excel.Nall,
                                    Date: '@excel.Date.ToString("dd.MM.yyyy HH:mm")',
                                    Cost: @excel.Cost
                                })">Добавить на складе</button>
                        </td>
                    </tr>
                }
            }
            @foreach (var storage in storages)
            {
                <tr class="compare_only_storage">
                    <td>@storage.Inventory</td>
                    <td>@storage.Name</td>
                    <td>@storage.Date.ToString("d MMMM yyyy")</td>
                    <td>@storage.Account</td>
                    <td>@storage.Nstorage</td>
                    <td>@storage.Nrepairs</td>
                    <td>не найдено в 1С</td>
                    <td>
                        <button onclick="Storages.Import.open('@storage.Id')">Карточка</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>