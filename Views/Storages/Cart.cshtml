@model int

@using (var db = new DevinContext())
{
    var storage = db.Storages.FirstOrDefault(x => x.Id == Model);

    if (storage == null)
    {
        <div class="cart__header">
            <div></div>
            <div class="cart__closeButton" title="Закрыть карточку" onclick="Cart.close()">
                <i class="icon ic-clear icon_white icon_no-hover"></i>
            </div>
        </div>
        <div class="cart__body">Нет данных по данному идентификатору</div>
        return;
    }

    <div class="cart__header">
        <div>@(string.IsNullOrEmpty(storage.Name) ? "Имя не задано" : storage.Name) @(storage.IsDeleted ? " (удален)" : "")</div>
        <div class="cart__closeButton" title="Закрыть карточку" onclick="Cart.close()">
            <i class="icon ic-clear icon_white icon_no-hover"></i>
        </div>
    </div>

    <div class="tabsSelector">
        <div class="tabsSelector__item tabsSelector__item_selected" data-tab="info">Информация</div>
        <div class="tabsSelector__item" data-tab="history">Логи</div>
    </div>

    <div class="tabsContainer">
        <div class="tabsContainer__item tabsContainer__item_selected" data-tab="info">
            <table id="form" class="cart__table">
                <tr>
                    <td>Инвентарный №</td>
                    <td>
                        <input class="cart__field" name="@nameof(storage.Inventory)" value="@storage.Inventory" />
                    </td>
                </tr>
                <tr>
                    <td>Наименование</td>
                    <td>
                        <textarea class="cart__field" name="@nameof(storage.Name)">@storage.Name</textarea>
                    </td>
                </tr>
                <tr>
                    <td>Описание</td>
                    <td>
                        <textarea class="cart__field" name="@nameof(storage.Description)">@storage.Description</textarea>
                    </td>
                </tr>
                <tr>
                    <td>Тип устройства</td>
                    <td>
                        <select class="cart__field" name="@nameof(storage.Type)">
                            <option value="">не определен</option>
                            @{
                                var types = db._DeviceTypes.Select(x => new { x.Id, x.StorageText }).ToList();
                                foreach (var row in types)
                                {
                                    <option value="@row.Id" @(row.Id == storage.Type ? "selected" : "")>@row.StorageText</option>
                                }
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>Счет учета</td>
                    <td>
                        <select class="cart__field" name="@nameof(storage.Account)">
                            @{
                                var accounts = db.Storages.Select(x => x.Account).GroupBy(x => x).Select(x => x.Key).ToList();
                                foreach (var account in accounts)
                                {
                                    <option value="@account" @(account == storage.Account ? "selected" : "")>@account</option>
                                }
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>Приход</td>
                    <td><input class="cart__field" name="@nameof(storage.Nall)" type="number" value="@storage.Nall" /></td>
                </tr>
                <tr>
                    <td>Стоимость (р. за шт.)</td>
                    <td><input class="cart__field" name="@nameof(storage.Cost)" value="@storage.Cost.ToString("0.00")" style="width: 100px" /></td>
                </tr>
                <tr>
                    <td>Дата прихода</td>
                    <td><input class="cart__field" name="@nameof(storage.Date)" type="text" value="@storage.Date.ToString("dd.MM.yyyy")" style="width: 100px" /></td>
                </tr>
                <tr>
                    <td>На складе</td>
                    <td><input class="cart__field" name="@nameof(storage.Nstorage)" type="number" value="@storage.Nstorage" /></td>
                </tr>
                <tr>
                    <td>Используется</td>
                    <td><input class="cart__field" name="@nameof(storage.Nrepairs)" type="number" value="@storage.Nrepairs" /></td>
                </tr>
                <tr>
                    <td>Списано</td>
                    <td><input class="cart__field" name="@nameof(storage.Noff)" type="number" value="@storage.Noff" /></td>
                </tr>
                @if (storage.Type == "PRN")
                {
                    <tr>
                        <td>Типовой картридж</td>
                        <td>
                            <select class="cart__field" name="@nameof(storage.CartridgeId)">
                                <option value="0">не сопоставлен</option>
                                @{
                                    var cartridges = db.Cartridges.Select(x => new { x.Id, x.Name }).OrderBy(x => x.Name).ToList();
                                    foreach (var row in cartridges)
                                    {
                                        <option value="@row.Id" @(row.Id == storage.CartridgeId ? "selected" : "")>@row.Name</option>
                                    }
                                }
                            </select>
                        </td>
                    </tr>
                }
                <tr>
                    <td>Группа</td>
                    <td>
                        <select class="cart__field" name="@nameof(storage.FolderId)" v_select>
                            <option value="0">@(storage.IsOff() ? "Списанные позиции" : "Не распределенные позиции")</option>
                            @{
                                var folders = db.Folders.Where(x => x.Type == "storage").Select(x => new { x.Id, x.Name }).OrderBy(x => x.Name).ToList();
                                foreach (var row in folders)
                                {
                                    <option value="@row.Id" @(row.Id == storage.FolderId ? "selected" : "")>@row.Name</option>
                                }
                            }
                        </select>
                    </td>
                </tr>
            </table>
            <div class="cart__menu">
                <button class="cart__button" onclick="Storages.update(@Model)">Сохранить</button>
                <button class="cart__button" onclick="Storages.repair(@Model)">Создать ремонт</button>
                <button class="cart__button" onclick="Storages.del(@Model)">Удалить</button>
            </div>
        </div>
        <div class="tabsContainer__item" data-tab="history" data-tab-lazy="@Url.Action("history", "storages", new { Id = Model })"></div>
    </div>
}