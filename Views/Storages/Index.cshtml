@{
    ViewBag.Title = "DEVIN | Склад";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section menu {
    <li>
        <form method="get" action="@Url.Action(null, "storages")">
            <input name="search" id="search" placeholder="Поиск" value="@Request.QueryString.Get("search")" />
        </form>
    </li><li>
        <a class="has-icon" onmousedown="_menu(this)" menu="main"><div class="icon ic-menu"></div></a>
    </li>
}

@section scripts {
    <script src="~/content/lib/jquery-3.3.1.min.js"></script>
    <script src="~/content/js/core.js"></script>
    <script>

        function cartBack() {
            cartOpenBack();
        }

        function cartOpenBack() {
            fetch(host + 'storages/cart/' + id)
                .then(res => res.text())
                .then(text => {
                    let cart = document.getElementById('cart');
                    cart.classList.add('cart_visible');
                    cart.innerHTML = text;
                    let elem = document.getElementById(id);
                    if (elem) {
                        document.getElementById('view').querySelectorAll('.selected').forEach(el => el.classList.remove('selected'));
                        elem.classList.add('selected');
                    }
                });
        }

        // Сохранение выбранных ремонтов 
        function createRepairs() {
            var trs = document.getElementById("repairs-positions").getElementsByTagName("tr");
            var form = "allrepairs=";
            for (var i = 0; i < trs.length; i++) {
                var device = trs[i].getElementsByTagName("select")[0],
                    units = trs[i].getElementsByTagName("input")[0];
                if (device.value != "0" && units.value != "0") {
                    form += trs[i].className.replace("pos", "") + ";" + device.value + ";" + units.value + ";" + (trs[i].getElementsByTagName("input")[1].checked ? "1" : "0") + "<separate>";
                }
            }
            if (document.getElementById("create-off-group").checked) form += "&createOff=" + encodeURIComponent(document.getElementById("name-off-group").value);

            $.post(host + 'repairs/endCreateFromStorages', form, function (data) {

                // Удаляем возможность повторной отправки запроса при успешной обработке запроса
                $(".cart-overflow > table").remove();
                $("#off-group").remove();
                $("#cart").find(".cart-menu td:first-child").remove();

                // Выводим ссылку на группу списаний, либо в приложение "ремонты"
                document.getElementById("console").innerHTML = data;
            })
                .fail(function () {
                    document.getElementById("console").innerHTML = "Произошла ошибка при обработке формы";
                });
        }

    </script>
}

@section html {
    <div id="excl" class="panel">
        <form id="compare-form" method="POST" enctype="multipart/form-data" action="@Url.Action("import", "storages")">
            <b>Обработка выгрузки из 1С</b>
            <div>
                <input type="file" name="excel" />
            </div>
            <div>
                <input type="submit" value="Загрузить" />
                <input type="button" value="Закрыть" onclick="Storages.compare()" />
            </div>
        </form>
    </div>

    <div id="selected" class="panel">
        <div>Выбрано позиций: <b></b></div>
        <div><a onclick="Storages.repairsSelected()">Оформить ремонты</a></div>
        <div>
            <select id="move_select" class="cart__field cart__field_autoWidth">
                <option value="0">Разместить отдельно</option>
                @using (var conn = Database.Connection())
                {
                    var folders = conn.Query<Folder>("SELECT * FROM Folders WHERE Type = 'storage' ORDER BY Name");
                    foreach (var folder in folders)
                    {
                        <option value="@folder.Id">@folder.Name</option>
                    }
                }
            </select>
            <br /><a onclick="Storages.move()">Переместить в группу</a>
        </div>
        <div><a onclick="Storages.labels()">Распечатать бирки</a></div>
        <div><a onclick="removeAllSelection()">Сбросить выбор</a></div>
    </div>

    <div class="context-menu" id="main">
        <div onclick="Storages.compare()">Импорт из 1C</div>
        <div onclick="Folders.create()">Создать группу</div>
        <div onclick="Storages.create()">Создать позицию на складе</div>
        <a href="~/storages/labels/">Просмотр прихода картриджей</a>
    </div>

    <ul class="context-menu" id="group">
        <li onclick="Folders.update()">Переименовать</li>
        <li onclick="Folders.beforeMove()">Переместить</li>
        <li onclick="Folders.createInner()">Создать вложенную группу</li>
        <li onclick="Folders.clear()">Очистить</li>
        <li onclick="Folders.del()">Удалить</li>
    </ul>

    <ul class="context-menu" id="modal">
        <li></li>
        <li>Ок</li>
        <li onclick="document.getElementById('modal').style.display = 'none';">Отмена</li>
    </ul>
}

@Html.Action("list")