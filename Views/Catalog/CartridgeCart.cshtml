@model int

@using (var conn = Database.Connection())
{
    var cartridge = conn.Query<Cartridge>("SELECT * FROM Cartridges WHERE Id = @Model", new { Model }).FirstOrDefault();
    if (cartridge == null)
    {
        <div class="error">Нет данных по данному идентификатору</div>
        return;
    }

    var storages = conn.Query<Storage>(@"SELECT Id, Inventory, Name, Nstorage
        FROM Storages
        WHERE CartridgeId = @Model AND IsDeleted = 0 AND Nstorage > 0 
        ORDER BY Inventory, Name", new { Model });

    float calculateCost = conn.Query<float?>(@"SELECT AVG(Cost) FROM (
	    SELECT 
		    CASE Cost WHEN 0 THEN @BaseCost
		    ELSE
			    CASE Account WHEN '10.5.1' THEN Cost * 1.2 
			    ELSE Cost * 2.4 END
		    END AS Cost
	    FROM Storages
	    WHERE CartridgeId = @Model) AS x", new { Model, BaseCost = 24.5F }).FirstOrDefault() ?? 0;

    <div class="cart-header">@cartridge.Name</div>

    <div class="cart-overflow">

        <table class="cart-table">
            <tr>
                <td>Наименование</td>
                <td><input name="Name" value="@cartridge.Name" placeholder="Наименование картриджа" /></td>
            </tr>
            <tr>
                <td>Описание</td>
                <td><textarea name="Description">@cartridge.Description</textarea></td>
            </tr>
            <tr>
                <td>Типовая стоимость</td>
                <td>
                    <input type="number" min="0" name="Cost" style="width: 100px;" />
                    @(storages.Count() > 0 ? ("Вычисленная: " + calculateCost.ToString("0.00") + "р.") : "")
                </td>
            </tr>
            <tr>
                <td>Тип</td>
                <td>
                    <select name="Type">
                        @{ 
                            var types = conn.Query("SELECT Id, Name FROM TypesCartridges WHERE Type = 'type' ORDER BY Name");
                            foreach (var type in types)
                            {
                                <option value="@type.Id" @(type.Id == cartridge.Type ? "selected" : "")>@type.Name</option>
                            }
                        }
                    </select>
                </td>
            </tr>
            <tr>
                <td>Цвет</td>
                <td>
                    <select name="Color">
                        @{
                            var colors = conn.Query("SELECT Id, Name FROM TypesCartridges WHERE Type = 'color' ORDER BY Name");
                            foreach (var color in colors)
                            {
                                <option value="@color.Id" @(color.Id == cartridge.Color ? "selected" : "")>@color.Name</option>
                            }
                        }
                    </select>
                </td>
            </tr>
        </table>

        <table class="cart-table catalog-compares">
            <tr>
                <td>
                    <br /><b>Связи с типовыми принтерами:</b>
                </td>
            </tr>
            @{
                var compared = conn.Query<Printer>("SELECT Id, Name FROM PrintersCartridges INNER JOIN Printers ON Printers.Id = PrintersCartridges.PrinterId WHERE PrintersCartridges.CartridgeId = @Model ORDER BY Name", new { Model });

                if (compared.Count() == 0)
                {
                    <tr>
                        <td>Не установлено ни одной связи</td>
                    </tr>
                }

                foreach (var printer in compared)
                {
                    <tr>
                        <td><a href="~/catalog/##prn@(printer.Id)">@printer.Name</a></td>
                        <td width="30px" data-id="@printer.Id">
                            <div class="icon ic-clear" onclick="delCompare(this)"></div>
                        </td>
                    </tr>
                }
            }
            <tr>
                <td>
                    Добавить связь:
                    <select id="new-compare">
                        <option value="0">?</option>
                        @{
                            var notCompared = conn.Query<Printer>(@"SELECT Printers.Id, Printers.Name 
                            FROM Printers
                            WHERE Printers.Id NOT IN (
                                SELECT Printers.Id
                                FROM Printers
                                INNER JOIN PrintersCartridges ON PrintersCartridges.PrinterId = Printers.Id
                                INNER JOIN Cartridges ON PrintersCartridges.CartridgeId = Cartridges.Id
                                WHERE (Cartridges.Id = @Model)
                                GROUP BY Printers.Id
                            ) ORDER BY Printers.Name", new { Model });

                            foreach (var printer in notCompared)
                            {
                                <option value="@printer.Id">@printer.Name</option>
                            }
                        }
                    </select>
                </td>
                <td width="30px">
                    <div class="icon ic-add" onclick="addCompare()"></div>
                </td>
            </tr>
        </table>

        <br /><b>Позиции со склада, связанные с этим картриджем:</b>
        <div class="cart-links">
            @foreach (var storage in storages)
            {
                <div>
                    <a href="~/storages/##@(storage.Id)"><b>@storage.Inventory</b> @storage.Name</a> @storage.Nstorage шт.
                </div>
            }
        </div>
    </div>

    <div id="console"></div>

    <table class="cart-menu">
        <tr>
            <td onclick="cartSave()">Сохранить</td>
            <td onclick="cartDelete()">Удалить</td>
            <td onclick="cartClose()">Закрыть</td>
        </tr>
    </table>
}