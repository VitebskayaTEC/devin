@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "DEVIN | Устройства | Просмотр 1С";
}

@using System.Data.SqlClient
@using System.Web.Configuration

@section styles {
    <link rel="stylesheet" href="~/content/css/table.css" />
}

@section scripts {
    <script src="~/Content/js/table.js"></script>
    <script>
        function reload() {
            let fields = '';
            let inputs = document.getElementById('fields').getElementsByTagName('input');
            for (let i = 0; i < inputs.length; i++) {
                if (inputs[i].checked) fields += (fields == '' ? '' : ',') + inputs[i].name;
            }
            document.location = './table1c?fields=' + fields + '&hide=' + document.getElementById('hide').value;
        }

        function hide(id, hide, obj) {
            fetch(host + 'devices/hideObject1C/' + id + "?hide=" + hide)
                .then(() => {
                    if (hide) {
                        let row = obj.parentNode.parentNode;
                        row.parentNode.removeChild(row);
                    }
                    else location.reload();
                });
        }
    </script>
}

@section menu {
    <li>
        <input id="search" placeholder="@(ViewBag.Search ?? "Поиск...")" />
    </li>
}


@{
    var Fields = new Dictionary<string, string>
    {
        {"Inventory", "Инв. номер"},
        {"Description", "Наименование"},
        {"Guild", "Цех"},
        {"SubDivision", "Подразделение"},
        {"Mol", "М.О.Л."},
        {"Account", "Счет учета"},
        {"Location", "Места хранения"},
        {"BalanceCost", "Балансная стоимость"},
        {"DepreciationCost", "Остаточная стоимость"},
        {"Rest", "Остаток"},
        {"RestCost", "Остаток сумма"},
        {"Gold", "Золото"},
        {"Silver", "Серебро"},
        {"Platinum", "Платина"},
        {"Palladium", "Палладий"},
        {"Mpg", "МПГ"},
        {"Date", "Дата прихода"},
    };

    string fields = Request.QueryString.Get("fields") ?? "";
    string hide = Request.QueryString.Get("hide") ?? "0";

    string sql = "";
    if (fields == "")
    {
        bool first = true;
        foreach (var kv in Fields)
        {
            if (first)
            {
                first = false;
            }
            else
            {
                fields += ", ";
            }
            fields += kv.Key;
        }
    }

    if (!fields.ToLower().Contains("inventory")) { fields += ", Inventory"; }
    fields += ", Inventory AS Id, IsHide, IsChecked";
    sql = "SELECT " + fields + " FROM Objects1C";

    if (hide == "0") { sql += " WHERE IsHide IS NULL OR IsHide = 0"; }
    else if (hide == "1") { sql += " WHERE IsHide = 1"; }
}

<div id="form">
    <table>
        <tr>
            <td id="fields">
                <b>Поля</b>
                @foreach (var kv in Fields)
                {
                    <label><input type="checkbox" name="@kv.Key" @(fields.Contains(kv.Key) ? "checked" : "")>@kv.Value</label>
                }
            </td>
            <td>
                <select id="hide">
                    <option value="0" @(hide == "0" ? "selected" : "")>Только видимые</option>
                    <option value="1" @(hide == "1" ? "selected" : "")>Только скрытые</option>
                    <option value="all" @(hide == "all" ? "selected" : "")>Все</option>
                </select>
            </td>
            <td>
                <button onclick="reload()">Обновить</button>
            </td>
        </tr>
    </table>
</div>

<table id="data" class="items">
    @using (var conn = new SqlConnection(WebConfigurationManager.ConnectionStrings["Devin"].ConnectionString))
    {
        conn.Open();
        using (var command = new SqlCommand(sql, conn))
        {
            using (var reader = command.ExecuteReader())
            {
                int len = reader.FieldCount;
                <thead>
                    <tr>
                        @for (int i = 0; i < len; i++)
                        {
                            string typeName = reader.GetDataTypeName(i);
                            string name = reader.GetName(i);
                            string sort = "";

                            if (typeName == "nvarchar") { sort = "string"; }
                            else if (typeName == "datetime") { sort = "date"; }
                            else if (typeName == "int" || name == "float" || name == "Inventory") { sort = "number"; }

                            if (name == "IsHide")
                            {
                                <th>Операции</th>
                            }
                            else if (!(name == "Inventory" && !fields.Contains("Inventory")) && (name != "Id") && (name != "IsChecked"))
                            {
                                <th data-type="@sort">@(Fields.TryGetValue(reader.GetName(i), out string x) ? x : reader.GetName(i))</th>
                            }
                        }
                    </tr>
                </thead>
                <tbody>
                    @while (reader.Read())
                    {
                        <tr>
                            @for (int i = 0; i < len; i++)
                            {
                                string name = reader.GetName(i);
                                string type = reader.GetDataTypeName(i);

                                if (type == "datetime")
                                {
                                    try
                                    {
                                        DateTime d = (DateTime)reader[i];
                                        if (d.Year <= 1990)
                                        {
                                            <td></td>
                                        }
                                        else
                                        {
                                            <td>@d.ToString("yyyy.MM.dd")</td>
                                        }
                                    }
                                    catch (Exception)
                                    {
                                        <td></td>
                                    }
                                }
                                else if (name == "Inventory")
                                {
                                    if (fields.Contains("Inventory"))
                                    {
                                        <td>@reader[i]</td>
                                    }
                                }
                                else if (name == "IsHide")
                                {
                                    <td>
                                        @if (reader[i].ToString() != "True")
                                        {
                                            <button onclick="hide('@reader["Id"]', true, this)">Скрыть</button>
                                        }
                                        else
                                        {
                                            <button onclick="hide('@reader["Id"]', false, this)">Показать</button>
                                        }
                                    </td>
                                }
                                else if (name != "Id" && name != "IsChecked")
                                {
                                    <td>@reader[i]</td>
                                }
                            }
                        </tr>
                    }
                </tbody>
            }
        }
    }
</table>