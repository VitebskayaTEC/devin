@{
    ViewBag.Title = "DEVIN | Учет вычислительной техники по местам";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles {
    <style>
        table {
            width: 100%;
            border: 1px solid #333;
        }

        table th {
            background: #eee;
            padding: 4px;
            font-weight: 500;
            border: 1px solid #333;
        }

        table td {
            text-align: center;
            background: #fff;
        }

        table input,
        table select,
        table textarea {
            width: 100%;
            padding: 4px;
        }
    </style>    
}

@section scripts {
    <script>
        class WorkPlaces {

            static Create() {
                fetch(host + 'devices/createWorkPlace').then(() => location.reload());
            }

            static Update(obj) {
                let row = obj.parentNode.parentNode;

                let form = new FormData();
                form.append('Id', row.id);
                row.querySelectorAll('input,select,textarea').forEach(el => form.append(el.name, el.value));

                fetch(host + 'devices/updateWorkPlace', { method: 'POST', body: form })
                    .then(res => res.json())
                    .then(json => {
                        if (json.Good) message(json.Good, 'good');
                    });
            }

            static Del(obj) {
                let row = obj.parentNode.parentNode;
                fetch(host + 'devices/deleteWorkPlace/' + row.id)
                    .then(res => res.json())
                    .then(json => {
                        if (json.Good) {
                            message(json.Good, 'good');
                            row.parentNode.removeChild(row);
                        }
                    });
            }
        }
    </script>
}

@using (var conn = Database.Connection())
{
    var guilds = conn.Query<string>("SELECT Guild FROM Objects1C GROUP BY Guild ORDER BY Guild");
    var places = conn.Query<WorkPlace>("SELECT * FROM WorkPlaces ORDER BY [Location]");

    <button class="cart__button" onclick="WorkPlaces.Create()">Добавить рабочее место</button>
    <br /><br />
    <table id="table">
        <thead>
            <tr>
                <th>Расположение рабочего места</th>
                <th width="250px">Цех</th>
                <th width="160px">Операции</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var place in places)
            {
                <tr id="@place.Id">
                    <td>
                        <input class="cart__field cart__field_noBorder" type="text" name="@nameof(place.Location)" value="@place.Location" />
                    </td>
                    <td>
                        <select class="cart__field cart__field_noBorder" name="@nameof(place.Guild)">
                            <option value="">не выбран</option>
                            @foreach (var guild in guilds)
                            {
                                if (guild == place.Guild)
                                {
                                    <option value="@guild" selected>@guild</option>
                                }
                                else
                                {
                                    <option value="@guild">@guild</option>
                                }
                            }
                        </select>
                    </td>
                    <td>
                        <button class="cart__button" onclick="WorkPlaces.Update(this)">Сохранить</button>
                        <button class="cart__button" onclick="WorkPlaces.Del(this)">Удалить</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
