@using (var conn = Database.Connection())
{
    string[] key = new string[] { "Name", "Inventory", "Location", "Mol", "Description", "Name, Type" };
    string[] direction = new string[] { "", " DESC" };
    int sortKey = int.TryParse(Request.QueryString.Get("key") ?? "5", out int _sortKey) ? _sortKey : 5;
    int sortDirection = int.TryParse(Request.QueryString.Get("direction") ?? "0", out int _sortDirection) ? _sortDirection : 0;
    string id = Request.QueryString.Get("id");
    string search = Request.QueryString.Get("search");

    string sql = @"SELECT
        Devices.Inventory,
        Devices.Type,
        Devices.Id,
        Devices.Name,
        Devices.ComputerId,
        Devices.Description,
        Devices.Mol,
        WorkPlaces.Location,
        Devices.IsOff,
        Folders.Id         AS FolderId
    FROM Devices
    LEFT OUTER JOIN Folders    ON Folders.Id  = Devices.FolderId
	LEFT OUTER JOIN WorkPlaces ON WorkPlaces.Id = Devices.PlaceId
    WHERE (Devices.IsDeleted = 0) ORDER BY " + key[sortKey] + direction[sortDirection];

    if (!string.IsNullOrEmpty(search))
    {
        sql = sql.Replace("WHERE", string.Format("WHERE (Devices.Inventory {0} OR Devices.Type {0} OR Devices.Id {0} OR Devices.Name {0} OR Devices.ComputerId {0} OR Devices.Description1C {0} OR Devices.Description {0} OR Devices.DateInstall {0} OR Devices.Mol {0} OR Devices.SerialNumber {0} OR Devices.PassportNumber {0} OR Devices.Location {0}) AND ", " LIKE '%" + search + "%'"));
    }

    var computers = new List<Computer>();
    var _computers = new List<Computer>();
    var devices = new List<Device>();
    var folders = new List<Folder>();

    // Получение данных из базы
    var __devices = conn.Query<Device>(sql).AsList();
    var _devices = new List<Device>();
    var _folders = conn.Query<Folder>(@"SELECT 
	    Folders.Id,
	    CASE WHEN Parents.Id IS NULL THEN 0 ELSE Parents.Id END AS FolderId,
	    Folders.Name
    FROM Folders
	LEFT OUTER JOIN Folders AS Parents ON Folders.FolderId = Parents.Id
    WHERE Folders.Type = 'device'
    ORDER BY Folders.Name").AsList();

    if (!string.IsNullOrEmpty(search))
    {
        <div class='unit'>
            <table class='caption'>
                <tr>
                    <th>Поиск совпадений по запросу: @search</th>
                </tr>
            </table>
            @RenderDevices(__devices)
        </div>
    }
    else
    {
        // Получение списка компьютеров из устройств
        foreach (var d in __devices)
        {
            if (d.Type == "CMP")
            {
                _computers.Add(new Computer
                {
                    Id = d.Id,
                    Type = d.Type,
                    Inventory = d.Inventory,
                    Name = d.Name,
                    Description = d.Description,
                    Mol = d.Mol,
                    Location = d.Location,
                    IsOff = d.IsOff,
                    FolderId = d.FolderId
                });
            }
            else
            {
                _devices.Add(d);
            }
        }

        // Распределение устройств по компьютерам
        bool found = false;

        foreach (var d in _devices)
        {
            found = false;
            foreach (var computer in _computers)
            {
                if (d.ComputerId == computer.Id)
                {
                    computer.Devices.Add(d);
                    found = true;
                    break;
                }
            }

            if (!found)
            {
                foreach (var folder in _folders)
                {
                    if (d.FolderId == folder.Id)
                    {
                        folder.Devices.Add(d);
                        found = true;
                        break;
                    }
                }

                if (!found)
                {
                    devices.Add(d);
                }
            }
        }

        // Распределение устройств и компьютеров по папкам
        foreach (var computer in _computers)
        {
            found = false;
            foreach (var folder in _folders)
            {
                if (computer.FolderId == folder.Id)
                {
                    folder.Computers.Add(computer);
                    found = true;
                    break;
                }
            }

            if (!found)
            {
                computers.Add(computer);
            }
        }


        // Распределение иерархии папок
        foreach (var folder in _folders)
        {
            if (folder.FolderId == 0)
            {
                folders.Add(Folder.Build(folder, _folders));
            }
        }

        foreach (var computer in computers)
        {
            @RenderComputer(computer)
        }

        <div class="unit" id="solo">
            <table class="caption">
                <tr>
                    <td width="24px"><div class="icon ic-cached"></div></td>
                    <th>Не распределенные устройства</th>
                </tr>
            </table>
            @RenderDevices(devices)
        </div>

        foreach (var folder in folders)
        {
            @RenderFolder(folder)
        }
    }
}

@helper RenderFolder(Folder folder)
{
    string id = "dg" + folder.Id;
    string open = Request.Cookies.Get(id)?.Value ?? "";

    <div class="unit group @open" id="@id">
        <table class='caption'>
            <tr>
                <td width='24px' menu='group' onmousedown='_menu(this)'>
                    <div class='icon ic-folder'></div>
                </td>
                <th>@folder.Name</th>
            </tr>
        </table>
        <div class="items_block @(open == "open" ? "" : "hide")">
            @foreach (var sub in folder.SubFolders)
            {
                @RenderFolder(sub)
            }
            @foreach (var computer in folder.Computers)
            {
                @RenderComputer(computer)
            }
            @RenderDevices(folder.Devices)
        </div>
    </div>
}

@helper RenderComputer(Computer computer)
{
    int id = computer.Id;
    string open = Request.Cookies.Get(id.ToString())?.Value ?? "";

    <div class="unit computer @open">
        <table class="caption">
            <tr>
                <td width="30px">
                    <div class="icon ic-computer" menu='computer' onmousedown='_menu(this)'></div>
                </td>
                <th width="200px">@computer.Name</th>
                <td width="40px"><div class="led @(computer.IsOff ? "off" : "on")"></div></td>
                <td width="60px">@computer.Inventory</td>
                <td width="140px">@computer.Location</td>
                <td width="200px">@computer.Mol</td>
                <td>@computer.Description</td>
            </tr>
        </table>
        <div class="items_block @(open == "open" ? "" : "hide")">
            <div class="title-wrapper" id="@computer.Id">
                <a class="view__link title" href="##@(computer.Id)">Компьютер @computer.Name - открыть карточку</a>
            </div>
            @RenderDevices(computer.Devices)
        </div>
    </div>
}

@helper RenderDevices(List<Device> devices)
{
    if (devices.Count == 0) { return; }
    <table class="items">
        @RenderHead()
        <tbody>
            @foreach (var device in devices)
            {
                <tr id="@device.Id" class="item">
                    <td><input type="checkbox" class="selecter" /></td>
                    <td><a class="view__link" href="##@(device.Id)"><div class="led @(device.IsOff ? "off" : "on")"></div></a></td>
                    <td><a class="view__link" href="##@(device.Id)">@device.Name</a></td>
                    <td><a class="view__link" href="##@(device.Id)">@device.Inventory</a></td>
                    <td><a class="view__link" href="##@(device.Id)">@device.Mol</a></td>
                    <td><a class="view__link" href="##@(device.Id)">@device.Description</a></td>
                </tr>
            }
        </tbody>
    </table>
}

@helper RenderHead()
{ 
    <thead>
        <tr>
            <td width="20px"><input type="checkbox" class="selecter-all" /></td>
            <th width="20px" data-type="type"></th>
            <th width="100px" data-type="string">название</th>
            <th width="80px" data-type="number">инв. номер</th>
            <th width="140px" data-type="string">м.о.л.</th>
            <th data-type="string">описание</th>
        </tr>
    </thead>
}