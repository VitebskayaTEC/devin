@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "DEVIN | Устройства | Табличный просмотр";
}

@using System.Data.SqlClient

@section styles {
    <link rel="stylesheet" href="~/content/css/table.css" />
}

@section scripts {
    <script src="~/Content/js/table.js"></script>
    <script>
        function reload() {
            let fields = '';
            let inputs = document.getElementById('fields').getElementsByTagName('input');
            for (let i = 0; i < inputs.length; i++) {
                if (inputs[i].checked) fields += (fields == '' ? '' : ',') + inputs[i].name;
            }
            document.location = './table?fields=' + fields + '&used=' + (document.getElementById('used').checked ? '0' : '1') + '&type=' + document.getElementById('type').value;
        }
    </script>
}

@section menu {
    <li>
        <input id="search" placeholder="@(ViewBag.Search ?? "Поиск...")" />
    </li>
}

@{
    var Fields = new Dictionary<string, string>
    {
        {"Inventory", "Инв. номер"},
        {"Type", "Тип"},
        {"Name", "Наименование"},
        {"Description", "Описание"},
        {"DateInstall", "Дата установки"},
        {"Mol", "МОЛ"},
        {"SerialNumber", "Серийный номер"},
        {"PassportNumber", "Паспортный номер"},
        {"Location", "Расположение"},
        {"OS", "ОС"},
        {"OSKey", "Ключ ОС"},
        {"ServiceTag", "Сервис-тег"},
        {"PassportGold", "Золото по паспорту"},
        {"PassportSilver", "Серебро по паспорту"},
        {"PassportPlatinum", "Платина по паспорту"},
        {"PassportMPG", "МПГ по паспорту"},
    };

    var Types = new Dictionary<string, string>
    {
        {"", "Все"},
        {"CMP", "Компьютеры"},
        {"DIS", "Мониторы"},
        {"PRN", "Принтеры"},
    };

    string type = Request.QueryString.Get("type") ?? "";
    string fields = Request.QueryString.Get("fields") ?? "";
    string used = Request.QueryString.Get("used") ?? "0";

    string sql = "SELECT ";
    if (fields != "")
    {
        sql += fields;
    }
    else
    {
        bool first = true;
        foreach (var kv in Fields)
        {
            if (first)
            {
                first = false;
            }
            else
            {
                sql += ", ";
            }
            sql += kv.Key;
        }
    }

    sql += " FROM Devices WHERE IsOff = '" + used + "'";

    if (type != "")
    {
        sql += " AND Type = '" + type + "'";
    }
}

<div id="form">
    <table>
        <tr>
            <td id="fields">
                <b>Поля</b>
                @foreach (var kv in Fields)
                {
                    <label><input type="checkbox" name="@kv.Key" @(fields.Contains(kv.Key) ? "checked" : "")>@kv.Value</label>
                }
            </td>
            <td>
                <b>Типы</b>
                <select id="type">
                    @foreach (var kv in Types)
                    {
                        <option value="@kv.Key" @(type == kv.Key ? "selected" : "")>@kv.Value</option>
                    }
                </select>
            </td>
            <td>
                <label><input type="checkbox" id="used" @(used == "1" ? "checked" : "")>Показывать списанные</label>
            </td>
            <td>
                <button onclick="reload()">Обновить</button>
            </td>
        </tr>
    </table>
</div>

<table id="data" class="items">
    @using (var conn = Database.Connection())
    {
        using (var command = new SqlCommand(sql, conn))
        {
            using (var reader = command.ExecuteReader())
            {
                int len = reader.FieldCount;
                <thead>
                    <tr>
                        @for (int i = 0; i < len; i++)
                        {
                            string name = reader.GetDataTypeName(i);
                            string sort = "";

                            if (name == "nvarchar") { sort = "string"; }
                            else if (name == "datetime") { sort = "date"; }
                            else if (name == "int") { sort = "number"; }

                            <th data-type="@sort" onclick="sortTable(this)">@(Fields.TryGetValue(reader.GetName(i), out string x) ? x : reader.GetName(i))</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @while (reader.Read())
                    {
                        <tr>
                            @for (int i = 0; i < len; i++)
                            {
                                if (reader.GetDataTypeName(i) == "datetime")
                                {
                                    DateTime d = (DateTime)reader[i];
                                    if (d.Year <= 1990)
                                    {
                                        <td></td>
                                    }
                                    else
                                    {
                                        <td>@d.ToString("yyyy.MM.dd")</td>
                                    }
                                }
                                else
                                {
                                    <td>@reader[i]</td>
                                }
                            }
                        </tr>
                    }
                </tbody>
            }
        }
    }
</table>