@model int
@using (var db = new DevinContext())
{
    var writeoff = db.Writeoffs.FirstOrDefault(x => x.Id == Model);

    if (writeoff == null)
    {
        <div class="cart__header">
            <div></div>
            <div class="cart__closeButton" title="Закрыть карточку" onclick="Cart.close()">
                <i class="icon ic-clear icon_white icon_no-hover"></i>
            </div>
        </div>
        <div class="cart__body">Запрашиваемое списание не найдено</div>
        return;
    }

    string Captions = "";
    string DefaultData = "";

    <div class="cart__header">
        <div>@writeoff.Name</div>
        <div class="cart__closeButton" title="Закрыть карточку" onclick="Cart.close()">
            <i class="icon ic-clear icon_white icon_no-hover"></i>
        </div>
    </div>

    <div class="tabsSelector">
        <div class="tabsSelector__item tabsSelector__item_selected" data-tab="info">Информация</div>
        <div class="tabsSelector__item" data-tab="history">Логи</div>
    </div>

    <div class="tabsContainer">
        <div class="tabsContainer__item tabsContainer__item_selected" data-tab="info">
            <table id="form" class="cart__table">
                <tr>
                    <td>Наименование</td>
                    <td>
                        <input class="cart__field" name="@nameof(writeoff.Name)" value="@writeoff.Name" />
                    </td>
                </tr>
                <tr>
                    <td>Тип устройства</td>
                    <td>
                        <select class="cart__field" name="@nameof(writeoff.Type)">
                            <option value="0">не определен</option>
                            @{
                                var types = db._WriteoffTypes.Select(x => new { x.Id, x.Name, x.Captions, x.DefaultData }).OrderBy(x => x.Name).ToList();

                                foreach (var row in types)
                                {
                                    if (row.Id == writeoff.Type)
                                    {
                                        Captions = row.Captions;
                                        DefaultData = row.DefaultData;
                                        <option value="@row.Id" selected>@row.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@row.Id">@row.Name</option>
                                    }
                                }
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>Дата создания</td>
                    <td><input class="cart__field" name="@nameof(writeoff.Date)" type="text" value="@writeoff.Date.ToString("dd.MM.yyyy")" style="width: 100px" /></td>
                </tr>
                @{
                    string[] captions = Captions.Split(new string[] { ";;" }, StringSplitOptions.None);
                    string[] defaults = DefaultData.Split(new string[] { ";;" }, StringSplitOptions.None);

                    if (captions.Length > 0)
                    {
                        for (int i = 0; i < captions.Length; i++)
                        {
                            string value = writeoff.Parameters.Length > i ? writeoff.Parameters[i] : defaults.Length > i ? defaults[i] : "";

                            <tr>
                                <td>@captions[i]</td>
                                <td>
                                    <input class="cart__field" name="@(nameof(writeoff.Params))[]" value="@value" />
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td>Параметры экспорта</td>
                            <td>В справочнике не определены поля для параметров</td>
                        </tr>
                    }
                }
                <tr>
                    <td>Описание</td>
                    <td>
                        <textarea class="cart__field" name="@nameof(writeoff.Description)">@writeoff.Description</textarea>
                    </td>
                </tr>
                <tr>
                    <td>Статья расходов</td>
                    <td>
                        <select class="cart__field" name="@nameof(writeoff.CostArticle)">
                            <option value="0">Не выбрана</option>
                            <option value="1" @(writeoff.CostArticle == 1 ? "selected" : "")>Эксплуатационные расходы</option>
                            <option value="2" @(writeoff.CostArticle == 2 ? "selected" : "")>Орг. техника</option>
                            <option value="3" @(writeoff.CostArticle == 3 ? "selected" : "")>ПТК АСУ</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>Папка</td>
                    <td>
                        <select class="cart__field" name="@nameof(writeoff.FolderId)" v_select>
                            <option value="0">Отдельно</option>
                            @{
                                var folders = db.Folders.Where(x => x.Type == "repair").Select(x => new { x.Id, x.Name }).OrderBy(x => x.Name).ToList();

                                foreach (var row in folders)
                                {
                                    <option value="@row.Id" @(row.Id == writeoff.FolderId ? "selected" : "")>@row.Name</option>
                                }
                            }
                        </select>
                    </td>
                </tr>
                @if (!string.IsNullOrEmpty(writeoff.LastExcel))
                {
                    <tr>
                        <td>Ссылка на распечатку</td>
                        <td><a href="~/content/excels/@(writeoff.LastExcel)">@writeoff.LastExcel</a></td>
                    </tr>
                    <tr>
                        <td>Последняя печать</td>
                        <td>@(writeoff.LastExcelDate?.ToString("dd.MM.yyyy") ?? "Дата не была сохранена")</td>
                    </tr>
                }
            </table>
        </div>
        <div class="tabsContainer__item" data-tab="history" data-tab-lazy="@Url.Action("history", "writeoffs", new { Id = writeoff.Id })"></div>
    </div>

    <div class="cart__menu">
        <button class="cart__button" onclick="Writeoffs.update(@writeoff.Id)">Сохранить</button>
        <button class="cart__button" onclick="Writeoffs.export(@writeoff.Id)">Печать</button>
        <button class="cart__button" onclick="Writeoffs.del(@writeoff.Id)">Удалить</button>
    </div>
}