@model string

<button class="cart__button" onclick="Devices.Cart.backToAddons()">Вернуться</button>

@using (var db = new DevinContext())
{
    if (!int.TryParse(Model, out int Id))
    {
        Id = db.Report.Where(x => x.RHost == Model).OrderByDescending(x => x.RDateTime).Select(x => x.ID).FirstOrDefault();
    }

    if (Id == 0)
    {
        <div>Компьютер не найден в базе Aida</div>
        return;
    }

    var about = db.Item
        .Where(x => x.ReportID == Id && x.IPage == "Операционная система")
        .Select(x => new Item { IGroup = x.IGroup, IField = x.IField, IValue = x.IValue })
        .ToList();

    about = about
        .Where(x => (x.IGroup == "Свойства операционной системы" && x.IField == "Название ОС")
            || (x.IGroup == "Свойства операционной системы" && x.IField == "Версия ОС")
            || (x.IGroup == "Лицензионная информация" && x.IField == "Ключ продукта"))
        .ToList();

    if (about.Count == 0)
    {
        <div>Компьютер не найден в базе Aida</div>
        return;
    }

    var programs = db.Item
        .Where(x => x.ReportID == Id && x.IPage == "Установленные программы")
        .GroupBy(x => x.IDevice)
        .Select(x => x.Key)
        .ToList();

    programs = programs
        .Where(x => !x.Contains("Microsoft Visual C++")
            && !x.Contains(".NET F")
            && !x.Contains("vs_")
            && !x.Contains("Update")
            && !x.Contains("icecap_"))
        .ToList();

    <div class="cartHistory">
        <b>Операционная система</b>
        <table class="cartHistory__table">
            @foreach (var row in about)
            {
                <tr>
                    <td>@row.IField</td>
                    <td>@row.IValue</td>
                </tr>
            }
        </table>
        <b>Установленное ПО</b>
        <table class="cartHistory__table">
            @foreach (string row in programs)
            {
                <tr><td>@row</td></tr>
            }
        </table>
    </div>
}