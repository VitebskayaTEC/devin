@{
    ViewBag.Title = "DEVIN | Ремонты";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="summary"></div>
<br />

@using (var db = new DevinContext())
{
    var rawQuery = from w in db.Writeoffs
                   from r in db.Repairs.Where(x => x.WriteoffId == w.Id).DefaultIfEmpty()
                   from d in db.Devices.Where(x => x.Id == r.DeviceId).DefaultIfEmpty()
                   from s in db.Storages.Where(x => x.Id == r.StorageId).DefaultIfEmpty()
                   where w.Date.Year == DateTime.Now.Year && r.IsOff
                   orderby w.Date, w.Id, r.Date, d.Id
                   select new
                   {
                       w.Id,
                       w.Date,
                       w.Name,
                       Repairs_Id = r.Id,
                       Repairs_Number = r.Number,
                       Repairs_StoragePrice = r.Number * s.Cost,
                       Repairs_Date = r.Date,
                       Repairs_Author = r.Author,
                       Repairs_Device_Id = d.Id,
                       Repairs_Device_Name = d.Name,
                       Repairs_Device_PublicName = d.PublicName,
                       Repairs_Storage_Id = s.Id,
                       Repairs_Storage_Inventory = s.Inventory,
                       Repairs_Storage_Name = s.Name
                   };

    var raw = rawQuery.ToList();

    var writeoffsQuery = from r in raw
                         group r by new { r.Id, r.Date, r.Name } into g
                         select new Writeoff
                         {
                             Id = g.Key.Id,
                             Date = g.Key.Date,
                             Name = g.Key.Name,
                             Repairs = g
                             .Select(x => new Repair
                             {
                                 Id = x.Repairs_Id,
                                 Number = x.Repairs_Number,
                                 StoragePrice = x.Repairs_StoragePrice,
                                 Date = x.Repairs_Date,
                                 Author = x.Repairs_Author,
                                 Device = new Device
                                 {
                                     Id = x.Repairs_Device_Id,
                                     Name = x.Repairs_Device_Name,
                                     PublicName = x.Repairs_Device_PublicName
                                 },
                                 Storage = new Storage
                                 {
                                     Id = x.Repairs_Storage_Id,
                                     Inventory = x.Repairs_Storage_Inventory,
                                     Name = x.Repairs_Storage_Name
                                 }
                             })
                             .AsList()
                         };

    var writeoffs = writeoffsQuery.ToList();

    if (writeoffs.Count() == 0)
    {
        <div>На заданный год нет оформленных списаний</div>
        return;
    }

    <div style="background: #fff; border: 1px solid #ccc; padding: 10px;">
        Общая стоимость всех ремонтов за год: @writeoffs.Select(w => w.Repairs.Select(r => r.StoragePrice).Sum()).Sum().ToString("0.00") р.
    </div>

    foreach (var writeoff in writeoffs)
    {
        <div class="unit" data-id="yearReport@(writeoff.Id)">
            <table class="caption">
                <tr>
                    <td width="80px">@writeoff.Date.ToString("dd.MM.yyyy")</td>
                    <td width="800px"><b>@writeoff.Name</b></td>
                    <td width="140px">Кол-во: @writeoff.Repairs.Select(x => x.Number).Sum()</td>
                    <td>Стоимость: @writeoff.Repairs.Select(x => x.StoragePrice).Sum().ToString("0.00") р.</td>
                </tr>
            </table>
            <div class="itemsBlock">
                <table class="items">
                    <thead>
                        <tr>
			                <th data-type="string">объект ремонта</th>
			                <th data-type="string" width="460px">деталь</th>
			                <th data-type="number" width="50px">кол-во</th>
			                <th data-type="number" width="80px">стоимость</th>
			                <th data-type="date" width="160px">дата</th>
			                <th data-type="string" width="100px">автор</th>
			            </tr>
                    </thead>
                    <tbody>
                        @foreach (var repair in writeoff.Repairs)
                        {
                            <tr>
                                <td><b>@repair.Device.Name</b> @repair.Device.PublicName</td>
                                <td>@repair.Storage.Name</td>
                                <td>@repair.Number</td>
                                <td>@repair.StoragePrice.ToString("0.00") р.</td>
                                <td>@repair.Date.ToString("dd.MM.yyyy")</td>
                                <td>@repair.Author</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
}