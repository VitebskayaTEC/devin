@using (var db = new DbDevin())
{
    int Id = int.TryParse((Request.Form.Get("Id") ?? "").Replace("device", ""), out int i) ? i : 0;
    int FolderId = int.TryParse(Request.Form.Get("Folder"), out i) ? i : 0;
    bool OnlyCompared = Request.Form.Get("OnlyCompared") == "true";

    List<Storage> Storages;

    if (OnlyCompared)
    {
        var query = from d in db.Devices
                    from t in db._PrinterCartridge.Where(x => x.PrinterId == d.PrinterId).DefaultIfEmpty()
                    from s in db.Storages.Where(x => x.CartridgeId == t.CartridgeId).DefaultIfEmpty()
                    where d.Id == Id && s.Nstorage > 0 && !s.IsDeleted
                    orderby s.Inventory
                    select s;

        Storages = query.ToList();
    }
    else
    {
        Storages = db.Storages
            .Where(x => x.Nstorage > 0 && !x.IsDeleted && (FolderId != -1 && x.FolderId == FolderId))
            .OrderBy(x => x.Inventory)
            .ToList();
    }

    if (Storages.Count == 0)
    {
        <div>Доступных позиций нет</div>
    }
    else
    {
        <table class="repairs__table">
            <tbody>
                @foreach (var storage in Storages)
                {
                    <tr data-id="@storage.Id" class="repairs__row">
                        <td width="80px">
                            <input class="cart__field" type="number" min="0" max="@storage.Nstorage" onblur="this.value = Math.round(this.value)" />
                        </td>
                        <td width="82px">@storage.Inventory</td>
                        <td>@storage.Name</td>
                        <td width="80px">@storage.Date.ToString("dd.MM.yyyy")</td>
                        <td width="90px">@storage.Nstorage</td>
                        <td width="80px">@storage.Account</td>
                        <td width="50px">
                            <input type="checkbox" name="IsVirtual" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}